"""
Django settings for labelon project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
import socket
from pathlib import Path
from django.urls import reverse_lazy
from member import *
import pyodbc

BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'fy2ximx46=#txua51*ds4ku)$e8g5db559r_b%$n^n%!ffs-gm'
AUTH_USER_MODEL = 'member.User'
LOGIN_URL = reverse_lazy('member:login')
LOGIN_REDIRECT_URL = reverse_lazy('main')
LOGOUT_REDIRECT_URL = reverse_lazy('member:login')

AUTHENTICATION_BACKENDS = [
    'member.backends.MemberBackend', # 우리가 만든 AUTH를 먼저 검사
    # 'django.contrib.auth.backends.ModelBackend', # Django가 관리하는 AUTH
]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'admin.labelon.kr', 'euclidai.kr', 'admin2.labelon.kr']
SILENCED_SYSTEM_CHECKS = ["auth.W004"]
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = ['http://localhost:8080', 'http://euclidai.kr:13080', 'https://www.labelon.kr']

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_crontab',
    'django.contrib.humanize',
    'common.apps.CommonConfig',
    'member.apps.MemberConfig',
    'dataset.apps.DatasetConfig',
    'job.apps.JobConfig',
    'calc.apps.CalcConfig',
    'stats.apps.StatsConfig',
    'text_summary.apps.TextSummaryConfig',
    'labelon.apps.LabelonConfig',
    'media_summary.apps.MediaSummaryConfig',
    'board.apps.BoardConfig',
    'rest_framework',
    'corsheaders',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # custom middleware
    'member.middleware.AllowSuperUserOnly',
    'member.middleware.AllowHostingUser',
]

ROOT_URLCONF = 'labelon.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'builtins': ['templatetags.custom_tags'],
        },
    },
]

WSGI_APPLICATION = 'labelon.wsgi.application'

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

DATE_INPUT_FORMATS = ('%Y-%m-%d',)

MEDIA_URL = '/media/'
MEDIA_ROOT = 'C:/Project/Temp'
RESULT_IMAGE_ROOT = 'euclidai.kr:13080'
ENCRYPT_KEY = 'ns6h3zT8jkE1pOup'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# 객체로 db 등록
# pyodbc tibero_db connect info
DSNNAME = "tibero"
DBUSER = "labelon"
DBPWD = "euclid!@)$labelon"
TIBERO_CONN = pyodbc.connect('DSN=' + DSNNAME + ';UID=' + DBUSER + ';PWD=' + DBPWD) # TIBERO_CONN 대문자



DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'labelon',
        'USER': 'euclidlab',
        'PASSWORD': '1q2w3e4r!',
        'HOST': '172.7.0.4',
        'PORT': '3306',
        'OPTIONS': {
            'charset': 'utf8mb4'
        }
    }, 'stats': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'labelon',
        'USER': 'euclidlab',
        'PASSWORD': '1q2w3e4r!',
        'HOST': '172.7.0.4',
        'PORT': '3306',
        'OPTIONS': {
            'charset': 'utf8mb4'
        }
    }
}

DEBUG = False
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        }
    },
    'loggers': {
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'DEBUG',
        }
    }
}


ELASTICSEARCH_HOST = '172.7.0.4:9201'
DATA_UPLOAD_MAX_NUMBER_FIELDS = 15000

HOSTING_ID = 1
# 유클리드소프트 개발서버
if socket.gethostname() == 'labelon':
    HOSTING_ID = 1
    MEDIA_ROOT = '/data/labelon'
    ALLOWED_HOSTS = ['euclidai.kr']
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'labelon',
            'USER': 'euclidlab',
            'PASSWORD': '1q2w3e4r!',
            'HOST': '172.7.0.4',
            'PORT': '3306',
            'OPTIONS': {
                'charset': 'utf8mb4'
            }
        }, 'stats': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'labelon',
            'USER': 'euclidlab',
            'PASSWORD': '1q2w3e4r!',
            'HOST': '172.7.0.4',
            'PORT': '3306',
            'OPTIONS': {
                'charset': 'utf8mb4'
            }
        }
    }

#나라지식정보 개발서버
elif socket.gethostname() == 'labelon_hosts_2':
    HOSTING_ID = 2
    MEDIA_ROOT = '/data/labelon'
    ALLOWED_HOSTS = ['euclidai.kr']
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'labelon',
            'USER': 'euclidlab',
            'PASSWORD': '1q2w3e4r!',
            'HOST': '172.7.0.4',
            'PORT': '3306',
            'OPTIONS': {
                'charset': 'utf8mb4'
            }
        }, 'stats': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'labelon',
            'USER': 'euclidlab',
            'PASSWORD': '1q2w3e4r!',
            'HOST': '172.7.0.4',
            'PORT': '3306',
            'OPTIONS': {
                'charset': 'utf8mb4'
            }
        }
    }
# 유클리드소프트 운영서버
elif socket.gethostname() == 'labelon_admin':
    HOSTING_ID = 1
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'labelon',
            'USER': 'euclidlab',
            'PASSWORD': 'euclid!@)$labelon',
            'HOST': '172.7.0.26',
            'PORT': '3306',
            'OPTIONS': {
                'charset': 'utf8mb4'
            }
        }, 'stats': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'labelon',
            'USER': 'euclidlab',
            'PASSWORD': 'euclid!@)$labelon',
            'HOST': '172.7.0.26',
            'PORT': '3306',
            'OPTIONS': {
                'charset': 'utf8mb4'
            }
        }
    }
    # 'HOST': '172.17.0.1',
    MEDIA_ROOT = '/data/synology_nfs/labelon'
    ALLOWED_HOSTS = ['admin.labelon.kr',  '172.7.0.24']
    RESULT_IMAGE_ROOT = 'labelon.kr'

    SESSION_COOKIE_AGE = 7200
    SESSION_SAVE_EVERY_REQUEST = True
    SESSION_EXPIRE_AT_BROWSER_CLOSE = True

    DEBUG = True

    ELASTICSEARCH_HOST = ['1.209.33.146:9200', '1.209.33.146:9201', '1.209.33.146:9202']

elif socket.gethostname() == 'ip-172-31-42-123' or socket.gethostname() == 'ip-172-31-45-110':
    if os.getlogin() == 'ubuntu':
        HOSTING_ID = 2
        ALLOWED_HOSTS = ['nara-admin.labelon.kr', 'localhost']
        RESULT_IMAGE_ROOT = 'nara.labelon.kr'
    elif os.getlogin() == 'edu':
        HOSTING_ID = 3
        ALLOWED_HOSTS = ['edu-admin.labelon.kr']
        RESULT_IMAGE_ROOT = 'edu.labelon.kr'

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'labelon',
            'USER': 'euclidlab',
            'PASSWORD': 'euclid!@)$labelon',
            'HOST': '1.209.33.146',
            'PORT': '13306',
            'OPTIONS': {
                'charset': 'utf8mb4'
            }
        }, 'stats': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'labelon',
            'USER': 'euclidlab',
            'PASSWORD': 'euclid!@)$labelon',
            'HOST': '1.209.33.146',
            'PORT': '13306',
            'OPTIONS': {
                'charset': 'utf8mb4'
            }
        }
    }

    MEDIA_ROOT = '/data/labelon'


    SESSION_COOKIE_AGE = 7200
    SESSION_SAVE_EVERY_REQUEST = True
    SESSION_EXPIRE_AT_BROWSER_CLOSE = True

    DEBUG = True

    ELASTICSEARCH_HOST = ['1.209.33.146:9200', '1.209.33.146:9201', '1.209.33.146:9202']

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# iframe 이나 embed를 사용
X_FRAME_OPTIONS = 'ALLOWALL'
XS_SHARING_ALLOWED_METHODS = ['POST', 'GET', 'OPTIONS', 'PUT', 'DELETE']

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# 호스팅아이디에 따른 쿠키이름 설정
SESSION_COOKIE_NAME = 'sessionid' + str(HOSTING_ID)


CRONJOBS = [
    ('*/10 * * * *', 'labelon.batch.job_reviewer_reset'),
    ('*/10 * * * *', 'labelon.batch.job_annotator_reset'),
    ('10 1 * * *', 'labelon.batch.tester_job_reset'),
    ('* * * * *', 'labelon.batch.tester_job_auto_inspect'),
    ('10 2 * * *', 'labelon.batch.job_insert_qa'),
    ('*/1 * * * *', 'labelon.batch.auto_project_request'),
    ('*/5 * * * *', 'labelon.batch.update_sms_send_history'),
    ('20 */2 * * *', 'labelon.batch.update_reject_count'),
    ('25 */2 * * *', 'labelon.batch.update_inspect_reject_count'),
    ('30 * * * *', 'labelon.batch.acc_reviewer_reject_count'),
    ('0 9 * * *', 'labelon.batch.data_check_send_mail'),
    ('30 8 * * *', 'labelon.batch.leave_member'),
    ('*/5 * * * *', 'labelon.batch.dataset_min_max_job_id_update'),
    ('10 * * * *', 'labelon.batch.prod_redis_reset'),
    ('15 */2 * * *', 'labelon.batch.prod_redis_reset_inferrence'),
    # ('10 */2 * * *', 'labelon.batch.job_insert_inference'),
    ('0 */1 * * *', 'labelon.batch.update_inference_thumbnail_image'),
    ('50 23 * * *', 'labelon.batch.update_hold_point_from_inference'),
    ('15 21 * * *', 'labelon.batch.download_gettyimage'),
    ('* * * * *', 'labelon.batch.thumbnail_create'),
    ('* * * * *', 'labelon.batch.thumbnail_create'),
]

if socket.gethostname() == 'labelon':
    CRONJOBS = [
        ('0 * * * *', 'labelon.batch.job_reviewer_reset'),
        ('5 * * * *', 'labelon.batch.job_annotator_reset'),
        ('10 1 * * *', 'labelon.batch.tester_job_reset'),
        ('* * * * *', 'labelon.batch.job_insert_qa'),
        ('* * * * *', 'labelon.batch.auto_project_request'),
        ('50 * * * *', 'labelon.batch.dev_redis_reset'),
        ('50 * * * *', 'labelon.batch.dev_redis_reset_inferrence'),
    ]
